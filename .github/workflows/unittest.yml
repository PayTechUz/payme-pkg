name: Testing project

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Testing project
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.11"]

    env:
      PAYME_ID: ${{ secrets.PAYME_ID }}
      PAYME_KEY: ${{ secrets.PAYME_KEY }}

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/dev-requirements.txt
          pip install -r requirements/requirements.txt
      - name: Set up database
        run: |
          # No setup needed for SQLite
          echo "Using SQLite database"
      - name: Create temporary manage.py
        run: |
          echo "from django.core.management import execute_from_command_line" > manage.py
          echo "import sys" >> manage.py
          echo "if __name__ == '__main__':" >> manage.py
          echo "    execute_from_command_line(sys.argv)" >> manage.py
      - name: Run migrations
        run: |
          python manage.py migrate
      - name: Run unit tests
        run: |
          pytest
